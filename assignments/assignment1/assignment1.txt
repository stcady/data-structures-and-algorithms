An Abstract Data Type (ADT) is a data type that is used when implementing APIs and applications. It is designed and define operations on data and to organize the data. The ADT's properties are specified independently of any implementation, whereas an Application Programming Interface (API) is a provided set of public operations provided to programmers who can then can use the API to implement the ADT in their programs. Hence, an ADT defines the abstract structure of the data and the API is used by the client programmer to implement the ADT and provide operations on the data in the form of classes, libraries, structures, and so on. Furthermore, being that an ADT is a logical description and representation of the data, Data Structures are the concrete representations of the data in how they are referenced/stored and they are the algorithms to perform operations on or manipulate the data elements of the ADT. Lastly, an ADT is an abstraction or mathematical model for Data Types, whereas Data Types individually classify data based on its value and its operations and is a concrete instance of a class or ADT. In summary, an ADT a description of object behavior and state mamagement and data strcutres are class level implementations of the ADT that can be interfaced with by a client programmer via an API and a concrete instance (data type) of the class as an object.
